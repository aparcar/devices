{"version":3,"sources":["images/logo.png","App.js","index.js"],"names":["yaml","require","App","React","useState","isOpen","setIsOpen","content","setContent","formData","setFormData","url","setUrl","filename","setFilename","useEffect","data","Blob","URL","createObjectURL","vendor","model","variant","undefined","name","toLowerCase","replace","hideModal","onSubmit","e","safeDump","skipInvalid","fetch","headers","Accept","then","response","json","schema","render","document","getElementById","Navbar","Nav","Brand","href","src","logo","alt","className","Link","id","Modal","show","onHide","Header","Title","Body","Footer","onClick","download","type","ReactDOM","StrictMode"],"mappings":"yOAAe,MAA0B,iC,gBCSnCA,EAAOC,EAAQ,KAgGNC,MA9Ff,WACE,MAA4BC,IAAMC,UAAS,GAA3C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BH,IAAMC,SAAS,oBAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCL,IAAMC,SAAS,IAA/C,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAsBP,IAAMC,SAAS,IAArC,mBAAOO,EAAP,KAAYC,EAAZ,KACA,EAAgCT,IAAMC,SAAS,IAA/C,mBAAOS,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACR,IAAIC,EAAO,IAAIC,KAAK,CAACV,IACrBK,EAAOM,IAAIC,gBAAgBH,IAC3B,IAAMI,EAA2BX,EAA3BW,OAAQC,EAAmBZ,EAAnBY,MAAOC,EAAYb,EAAZa,QACrB,QACcC,IAAXH,QAAkCG,IAAVF,QACbE,IAAZD,EACA,CACA,IAAIE,EAAOJ,EAAOK,cAAgB,IAAMJ,EAAMI,mBAC9BF,IAAZD,IACFE,EAAOA,EAAO,IAAMF,GAItBE,GADAA,GADAA,GAAc,SACFE,QAAQ,IAAK,MACbA,QAAQ,2GAAyB,IAC7CZ,EAAYU,MAGb,CAACjB,IAEJ,IAIMoB,EAAY,WAChBrB,GAAU,IAGNsB,EAAW,SAAC,EAAcC,GAAO,IAAnBpB,EAAkB,EAAlBA,SAClBC,EAAYD,GACZD,EAAWR,EAAK8B,SAASrB,EAAU,CAAEsB,aAAa,KATlDzB,GAAU,IA4BZ,OAfA0B,MAAM,cAAe,CACnBC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLC,iBACE,mCACE,cAAC,IAAD,CAAMD,OAAQA,EAAQV,SAAUA,EAAUnB,SAAUA,MAEtD+B,SAASC,eAAe,YAI5B,qCACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,QAAnB,SACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOC,UAAU,aAGzC,eAACN,EAAA,EAAD,CAAKM,UAAU,OAAf,UACE,cAACN,EAAA,EAAIO,KAAL,CAAUL,KAAK,oDAAf,yBAGA,cAACF,EAAA,EAAIO,KAAL,CAAUL,KAAK,kBAAf,0BAGJ,qBAAKM,GAAG,OAAOF,UAAU,iBAAzB,SACE,sDAEF,eAACG,EAAA,EAAD,CAAOC,KAAMhD,EAAQiD,OAAQ3B,EAA7B,UACE,cAACyB,EAAA,EAAMG,OAAP,UACE,cAACH,EAAA,EAAMI,MAAP,8CAEF,cAACJ,EAAA,EAAMK,KAAP,UACE,8BAAMlD,MAER,eAAC6C,EAAA,EAAMM,OAAP,WACE,mBAAGT,UAAU,SAASU,QAAShC,EAA/B,oBAEK,IACL,mBAAGkB,KAAMlC,EAAKsC,UAAU,SAASW,SAAU/C,EAAUgD,KAAK,YAA1D,4BC3FVC,IAASvB,OACP,cAAC,IAAMwB,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,W","file":"static/js/main.72953edc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2e8d0b25.png\";","import React, { useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport Form from \"@rjsf/bootstrap-4\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport logo from \"./images/logo.png\";\nimport \"./App.css\";\n\nconst yaml = require(\"js-yaml\");\n\nfunction App() {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [content, setContent] = React.useState(\"Transitioning...\");\n  const [formData, setFormData] = React.useState({});\n  const [url, setUrl] = React.useState(\"\");\n  const [filename, setFilename] = React.useState(\"\");\n\n  useEffect(() => {\n    var data = new Blob([content]);\n    setUrl(URL.createObjectURL(data));\n    var { vendor, model, variant } = formData;\n    if (\n      (vendor !== undefined && model !== undefined) ||\n      variant !== undefined\n    ) {\n      var name = vendor.toLowerCase() + \"_\" + model.toLowerCase();\n      if (variant !== undefined) {\n        name = name + \"-\" + variant;\n      }\n      name = name + \".yaml\";\n      name = name.replace(\" \", \"-\");\n      name = name.replace(/[\\u{0080}-\\u{FFFF}]/gu, \"\");\n      setFilename(name);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content]);\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  const onSubmit = ({ formData }, e) => {\n    setFormData(formData);\n    setContent(yaml.safeDump(formData, { skipInvalid: true }));\n    showModal();\n  };\n\n  fetch(\"schema.json\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then((schema) => {\n      render(\n        <>\n          <Form schema={schema} onSubmit={onSubmit} formData={formData} />\n        </>,\n        document.getElementById(\"form\")\n      );\n    });\n  return (\n    <>\n      <Navbar>\n        <Nav>\n          <Navbar.Brand href=\"#home\">\n            <img src={logo} alt=\"logo\" className=\"logo\"></img>\n          </Navbar.Brand>\n        </Nav>\n        <Nav className=\"mr-0\">\n          <Nav.Link href=\"https://github.com/aparcar/devices/tree/main/form\">\n            Source Code\n          </Nav.Link>\n          <Nav.Link href=\"schema_doc.html\">Schema</Nav.Link>\n        </Nav>\n      </Navbar>\n      <div id=\"form\" className=\"container form\">\n        <p> Loading schemas...</p>\n      </div>\n      <Modal show={isOpen} onHide={hideModal}>\n        <Modal.Header>\n          <Modal.Title>Device hardware configuration</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre>{content}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <p className=\"button\" onClick={hideModal}>\n            Cancel\n          </p>{\" \"}\n          <a href={url} className=\"button\" download={filename} type=\"text/yaml\">\n            Save\n          </a>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}